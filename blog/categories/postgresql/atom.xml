<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Postgresql | Data Tips and Tricks]]></title>
  <link href="http://dbcaptain.com/blog/categories/postgresql/atom.xml" rel="self"/>
  <link href="http://dbcaptain.com/"/>
  <updated>2015-10-30T17:35:22+02:00</updated>
  <id>http://dbcaptain.com/</id>
  <author>
    <name><![CDATA[Alexander Shereshevsky]]></name>
    <email><![CDATA[shereshevsky@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upgrade PostgreSQL 9.3 to 9.4 on Mater-slave Replication Cluster]]></title>
    <link href="http://dbcaptain.com/blog/2015/10/30/Upgrade%20PostgreSQL%209.3%20to%209.4%20on%20mater-slave%20replication%20cluster/"/>
    <updated>2015-10-30T16:43:15+02:00</updated>
    <id>http://dbcaptain.com/blog/2015/10/30/Upgrade PostgreSQL 9.3 to 9.4 on mater-slave replication cluster</id>
    <content type="html"><![CDATA[<h3>Preparations:</h3>

<ol>
<li>backup DB cluster</li>
<li>backup config:
 <code>
 mkdir ~/pg_config_backup
 sudo cp /etc/postgresql/9.3/main/* ~/pg_config_backup
</code></li>
<li>add extra package if missing:
 <code>
 sudo apt-get update
 sudo apt-get install postgresql-server-dev-9.3
</code></li>
<li>check correct repository setup:
 ```
 echo &ldquo;deb <a href="http://apt.postgresql.org/pub/repos/apt/">http://apt.postgresql.org/pub/repos/apt/</a> wheezy-pgdg main&rdquo; >> /etc/apt/sources.list.d/pgdg.list
 sudo apt-get install wget ca-certificates
 wget &ndash;quiet -O - <a href="https://www.postgresql.org/media/keys/ACCC4CF8.asc">https://www.postgresql.org/media/keys/ACCC4CF8.asc</a> | sudo apt-key add -

<h2>Install 9.4 packages and create the new cluster:</h2>

<pre><code class="">sudo apt-get update
sudo apt-get install postgresql-9.4 postgresql-contrib-9.4 postgresql-client-9.4 postgresql-9.4-pgespresso postgresql-server-dev-9.4
</code></pre>

Drop 9.4 cluster if created by installer
<code>
pg_dropcluster 9.4 main
</code>
Initialize the new PostgreSQL cluster with initdb:
<code>
sudo chown -R  postgres.postgres /etc/postgresql
sudo chown -R  postgres.postgres /data/postgresql
sudo su postgres
/usr/lib/postgresql/9.4/bin/initdb -D /data/postgresql/9.4/main -E UTF8
/usr/lib/postgresql/9.4/bin/postgres -D /data/postgresql//9.4/main
or
/usr/lib/postgresql/9.4/bin/pg_ctl -D /data/postgresql//9.4/main -l logfile start
</code>

<h2>Prepare and start 9.4 cluster</h2>

<pre><code>cd /etc/postgresql
cp -R 9.3/ 9.4
</code></pre>

change config to 9.4
<code>
sed -i 's/9.3/9.4/g' postgresql.conf
grep '9.' postgresql.conf
/usr/lib/postgresql/9.4/bin/pg_ctl -D /etc/postgresql/9.4/main -l postgres.log start
</code>
check:
<code>
postgres=# select datcollate, datctype from pg_database where datname = 'template0';
datcollate  |  datctype   
-------------+-------------
en_US.UTF-8 | en_US.UTF-8
(1 row)
^D
</code>

<h2>stop running clusters</h2>

<pre><code>sudo pg_lsclusters
sudo service postgresql stop
sudo mv /etc/init.d/postgresql /etc/init.d/postgresql.
</code></pre>

<h2>run pg_upgrade</h2>

<pre><code>cd /tmp
</code></pre>

check:
<code>
sudo -H -u postgres /usr/lib/postgresql/9.4/bin/pg_upgrade \
-b /usr/lib/postgresql/9.3/bin \
-B /usr/lib/postgresql/9.4/bin \
-d /var/lib/postgresql/9.3/main \
-D /var/lib/postgresql/9.4/main \
-o ' -c config_file=/etc/postgresql/9.3/main/postgresql.conf' \
-O ' -c config_file=/etc/postgresql/9.4/main/postgresql.conf' \
-p 5432 \
-P 5433 \
--check \
--verbose \
--retain
</code>
execute:
<code>
sudo -H -u postgres /usr/lib/postgresql/9.4/bin/pg_upgrade \
-b /usr/lib/postgresql/9.3/bin \
-B /usr/lib/postgresql/9.4/bin \
-d /var/lib/postgresql/9.3/main \
-D /var/lib/postgresql/9.4/main \
-o ' -c config_file=/etc/postgresql/9.3/main/postgresql.conf' \
-O ' -c config_file=/etc/postgresql/9.4/main/postgresql.conf' \
-p 5432 \
-P 5433 \
--verbose \
--retain \
--jobs=4
</code>

<h2>change 9.4 port to 5432</h2>

<pre><code>sudo vi /etc/postgresql/9.4/main/postgresql.conf  -- 5432
sudo vi /etc/postgresql/9.3/main/postgresql.conf  -- 5433
</code></pre>

<p>remove /var/lib/postgresql/9.4/main</p></li>
</ol>


<pre><code>sudo mv /etc/init.d/postgresql. /etc/init.d/postgresql
sudo service postgresql start 9.4
</code></pre>

<h2>Remove the old packages</h2>

<pre><code>dpkg -l | grep postgresql
apt-get remove postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3
</code></pre>

<h2>Analyze and drop old</h2>

<pre><code>sudo su  postgres
/tmp/analyze_new_cluster.sh
or /usr/lib/postgresql/9.4/bin/vacuumdb -dbluevine -Upostgres -h127.0.0.1 
/tmp/delete_old_cluster.sh
</code></pre>

<h2>On slave:</h2>

<p>backup configs:
<code>
mkdir ~/pg_config_backup
sudo cp /etc/postgresql/9.3/main/* ~/pg_config_backup
</code>
Install 9.4 packages and create the new cluster:
<code>
sudo apt-get update
sudo apt-get install postgresql-9.4 postgresql-contrib-9.4 postgresql-client-9.4 postgresql-9.4-pgespresso postgresql-server-dev-9.4
sudo -u postgres pg_basebackup -h 10.10.13.234 -D /data/postgresql/9.3/main -U replicator -v -P
mkdir  /data/postgresql/9.4/main
sudo chown -R  postgres.postgres /data/postgresql
</code></p>

<h2>On master:</h2>

<pre><code>sudo -u postgres psql -x -c "select * from pg_stat_replication;"
select x id, x::text into test from generate_series(1, 1000000) x;
</code></pre>

<p>check table exists on slave servers
check logs on all the servers</p>

<p><a href="http://www.depesz.com/2015/02/27/how-to-pg_upgrade/">http://www.depesz.com/2015/02/27/how-to-pg_upgrade/</a>
<a href="http://www.gab.lc/articles/migration_postgresql_9-3_to_9-4">http://www.gab.lc/articles/migration_postgresql_9-3_to_9-4</a>
<a href="http://www.postgresql.org/docs/9.4/static/upgrading.html">http://www.postgresql.org/docs/9.4/static/upgrading.html</a>
<a href="http://www.postgresql.org/docs/9.4/static/pgupgrade.html">http://www.postgresql.org/docs/9.4/static/pgupgrade.html</a>
<a href="https://wiki.postgresql.org/wiki/Using_pg_upgrade_on_Ubuntu/Debian">https://wiki.postgresql.org/wiki/Using_pg_upgrade_on_Ubuntu/Debian</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load OSM Data to PostgreSQL]]></title>
    <link href="http://dbcaptain.com/blog/2015/10/29/Load%20OSM%20data%20to%20PostgreSQL/"/>
    <updated>2015-10-29T16:43:15+02:00</updated>
    <id>http://dbcaptain.com/blog/2015/10/29/Load OSM data to PostgreSQL</id>
    <content type="html"><![CDATA[<p>I&rsquo;m using a small DigitalOcean droplet to load fresh OSM data to PostgreSQL.
The 2G memory instance is prefereable, change it just for OSM load and you can change it back after.
I&rsquo;m going to use current stable versions:</p>

<ul>
<li>PostgreSQL 9.3</li>
<li>PostGIS 2.1</li>
<li>osm2pgsql 0.84</li>
<li>Ubuntu 12.04.4 LTS</li>
</ul>


<p>As reference using osm2pgsql article in OSM wiki.
Reference for Postgres/PostGIS installation using PostgreSQL installation guides wiki article and Official Ubuntu Community Wiki.
This one was good too.</p>

<pre><code class="sh">$ echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" &gt; /etc/apt/sources.list.d/postgresql.list
$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
$ sudo apt-get update
$ sudo apt-get upgrade
$ sudo apt-get install postgresql-9.3 postgresql-9.3-postgis-2.1 postgresql-contrib-9.3
</code></pre>

<p>Edit pg_hba.config for postgres to connect locally.</p>

<pre><code class="sh">$ sudo vi /etc/postgresql/9.3/main/pg_hba.conf
</code></pre>

<p>First not commented line will be like this (change peer to trust):
local all postgres trust</p>

<p>Restart postgresql service:
<code>sh
$ sudo service postgresql restart
</code>
Now check you are able to connect to postgres (default) database:</p>

<pre><code class="sh">$ psql -U postgres
psql (9.3.4)
Type "help" for help.

postgres=#
</code></pre>

<p>Create new database to store OSM data:</p>

<pre><code class="sh">postgres=# create database osm;
CREATE DATABASE
</code></pre>

<p>Connect to created database and add PostGIS and H-store extensions:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>psql -U postgres -d osm
</span><span class='line'>psql <span class="o">(</span>9.3.4<span class="o">)</span>
</span><span class='line'>Type <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nb">help</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="k">for</span> help.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;osm<span class="o">=</span><span class="c"># create extension postgis;</span>
</span><span class='line'>CREATE EXTENSION
</span><span class='line'><span class="nv">osm</span><span class="o">=</span><span class="c"># create extension hstore;</span>
</span><span class='line'>CREATE EXTENSION
</span></code></pre></td></tr></table></div></figure>
Now we have the database we will use to load OSM data later.</p>

<p>Now let&rsquo;s compile osm2pgsql:</p>

<pre><code class="sh">$ sudo apt-get install build-essential libxml2-dev libgeos++-dev libpq-dev libbz2-dev proj libtool automake git lua5.2 liblua5.2-0 liblua5.2-dev liblua5.1-0 libprotobuf-c0-dev protobuf-c-compiler
$ wget https://github.com/openstreetmap/osm2pgsql/archive/0.84.0.zip
$ unzip 0.84.0.zip
$ rm 0.84.0.zip
$ cd osm2pgsql-0.84.0
$ ./autogen.sh &amp;&amp; ./configure &amp;&amp; make
$ sudo make install
</code></pre>

<p>Now let&rsquo;s download osm file we will use for import.
Here you can find different mirrors.</p>

<pre><code class="sh">wget http://download.geofabrik.de/north-america/us-northeast-latest.osm.bz2
</code></pre>

<p>And run osm2pgsql:</p>

<pre><code class="sh">bunzip2 -c us-northeast-latest.osm.bz2 | /usr/local/bin/osm2pgsql --slim -E 4326 -d osm -C 1500 -S /usr/share/osm2pgsql/default.style -U postgres --hstore /dev/stdin
</code></pre>

<p>And waiting &hellip;</p>
]]></content>
  </entry>
  
</feed>
