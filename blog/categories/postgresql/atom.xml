<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Postgresql | Data Tips and Tricks]]></title>
  <link href="http://dbcaptain.com/blog/categories/postgresql/atom.xml" rel="self"/>
  <link href="http://dbcaptain.com/"/>
  <updated>2015-11-01T12:06:12+02:00</updated>
  <id>http://dbcaptain.com/</id>
  <author>
    <name><![CDATA[Alexander Shereshevsky]]></name>
    <email><![CDATA[shereshevsky@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upgrade PostgreSQL 9.3 to 9.4 on Mater-slave Replication Cluster]]></title>
    <link href="http://dbcaptain.com/blog/2015/10/30/Upgrade%20PostgreSQL%209.3%20to%209.4%20on%20mater-slave%20replication%20cluster/"/>
    <updated>2015-10-30T16:43:15+02:00</updated>
    <id>http://dbcaptain.com/blog/2015/10/30/Upgrade PostgreSQL 9.3 to 9.4 on mater-slave replication cluster</id>
    <content type="html"><![CDATA[<h3>Preparations:</h3>

<p>backup DB cluster
backup config:
<code>
mkdir ~/pg_config_backup
sudo cp /etc/postgresql/9.3/main/* ~/pg_config_backup
</code>  <br/>
add extra package if missing:
<code>
sudo apt-get update
sudo apt-get install postgresql-server-dev-9.3
</code>
check correct repository setup:
<code>
echo "deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main" &gt;&gt; /etc/apt/sources.list.d/pgdg.list
sudo apt-get install wget ca-certificates
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
</code></p>

<h3>Install 9.4 packages and create the new cluster:</h3>

<pre><code class="">sudo apt-get update
sudo apt-get install postgresql-9.4 postgresql-contrib-9.4 postgresql-client-9.4 postgresql-9.4-pgespresso postgresql-server-dev-9.4
</code></pre>

<p>Drop 9.4 cluster if created by installer
<code>
pg_dropcluster 9.4 main
</code>
change config to 9.4
<code>
cd /etc/postgresql
rm -rf 9.4
cp -R 9.3/ 9.4
sed -i 's/9.3/9.4/g' postgresql.conf
grep '9.' postgresql.conf
</code>
Initialize the new PostgreSQL 9.4 cluster:
<code>
sudo chown -R  postgres.postgres /etc/postgresql
sudo chown -R  postgres.postgres /data/postgresql
sudo su postgres
pg_createcluster -e UTF8 -p 5433 -d /data/postgresql/9.4/main 9.4 main
</code>
start:
<code>
pg_ctlcluster 9.4 main start
</code>
check:
<code>
postgres=# select datcollate, datctype from pg_database where datname = 'template0';
 datcollate  |  datctype   
-------------+-------------
 en_US.UTF-8 | en_US.UTF-8
(1 row)
^D
</code></p>

<h3>stop running clusters</h3>

<pre><code>sudo pg_lsclusters
sudo service postgresql stop
sudo mv /etc/init.d/postgresql /etc/init.d/postgresql.
</code></pre>

<h3>run pg_upgrade</h3>

<pre><code>cd /tmp
</code></pre>

<p>check:
<code>
sudo -H -u postgres /usr/lib/postgresql/9.4/bin/pg_upgrade \
   -b /usr/lib/postgresql/9.3/bin \
   -B /usr/lib/postgresql/9.4/bin \
   -d /data/postgresql/9.3/main \
   -D /data/postgresql/9.4/main \
   -o ' -c config_file=/etc/postgresql/9.3/main/postgresql.conf' \
   -O ' -c config_file=/etc/postgresql/9.4/main/postgresql.conf' \
   -p 5432 \
   -P 5433 \
   --check \
   --verbose \
   --retain
</code>
execute:
<code>
sudo -H -u postgres /usr/lib/postgresql/9.4/bin/pg_upgrade \
   -b /usr/lib/postgresql/9.3/bin \
   -B /usr/lib/postgresql/9.4/bin \
   -d /data/postgresql/9.3/main \
   -D /data/postgresql/9.4/main \
   -o ' -c config_file=/etc/postgresql/9.3/main/postgresql.conf' \
   -O ' -c config_file=/etc/postgresql/9.4/main/postgresql.conf' \
   -p 5432 \
   -P 5433 \
   --verbose \
   --retain \
   --jobs=4
</code></p>

<h3>change 9.4 port to 5432</h3>

<pre><code>sudo sed -i 's/5433/5432/g' /etc/postgresql/9.4/main/postgresql.conf
sudo sed -i 's/5432/5433/g' /etc/postgresql/9.3/main/postgresql.conf
</code></pre>

<p>remove /var/lib/postgresql/9.4/main
<code>
sudo mv /etc/init.d/postgresql. /etc/init.d/postgresql
pg_ctlcluster 9.4 main start
</code></p>

<h3>(optioanl) Remove the old packages</h3>

<pre><code>dpkg -l | grep postgresql
apt-get remove postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3
</code></pre>

<h3>Analyze and drop old</h3>

<pre><code>sudo su  postgres
/tmp/analyze_new_cluster.sh
or /usr/lib/postgresql/9.4/bin/vacuumdb -dbluevine -Upostgres -h127.0.0.1 
/tmp/delete_old_cluster.sh
</code></pre>

<h3>On slave:</h3>

<p>backup configs:
<code>
mkdir ~/pg_config_backup
sudo cp /etc/postgresql/9.3/main/* ~/pg_config_backup
</code>
Install 9.4 packages and create the new cluster:
<code>
sudo apt-get update
sudo apt-get install postgresql-9.4 postgresql-contrib-9.4 postgresql-client-9.4 postgresql-9.4-pgespresso postgresql-server-dev-9.4
pg_dropcluster 9.4 main --stop
mkdir  /data/postgresql/9.4/main
sudo chown -R  postgres.postgres /data/postgresql
cd /etc/postgresql
rm -rf 9.4
cp -R 9.3/ 9.4
</code></p>

<h3>On master:</h3>

<pre><code>psql -U postgres -c "select pg_start_backup('clone',true)"
rsync -av --exclude pg_xlog --exclude postgresql.conf --exclude postgresql.pid \ 
     /data/postgresql/9.4/*  $SLAVE_HOST:/data/postgresql/9.4/
psql -U postgres -c "select pg_stop_backup()"
rsync -av /data/postgresql/9.4/main/pg_xlog $SLAVE_HOST:/data/postgresql/9.4/main/
</code></pre>

<h3>ON slave:</h3>

<p>recovery.conf in /data/postgres/9.4/main should look like this:
<code>
standby_mode = 'on'
primary_conninfo = 'host=$MASTER_HOST port=5432 user=replicator password=bvmyreplpasserfvgty sslmode=require'
trigger_file = '/tmp/postgresql.trigger'
</code>
sudo service postgresql start</p>

<h3>On master:</h3>

<p>sudo -u postgres psql -x -c &ldquo;select * from pg_stat_replication&rdquo;
sudo -u postgres psql -x -c &ldquo;select x id, x::text into test from generate_series(1, 1000000) x&rdquo;</p>

<p>check table exists on slave servers
check logs on all the servers</p>

<p><a href="http://www.depesz.com/2015/02/27/how-to-pg_upgrade/">http://www.depesz.com/2015/02/27/how-to-pg_upgrade/</a>
<a href="http://www.gab.lc/articles/migration_postgresql_9-3_to_9-4">http://www.gab.lc/articles/migration_postgresql_9-3_to_9-4</a>
<a href="http://www.postgresql.org/docs/9.4/static/upgrading.html">http://www.postgresql.org/docs/9.4/static/upgrading.html</a>
<a href="http://www.postgresql.org/docs/9.4/static/pgupgrade.html">http://www.postgresql.org/docs/9.4/static/pgupgrade.html</a>
<a href="https://wiki.postgresql.org/wiki/Using_pg_upgrade_on_Ubuntu/Debian">https://wiki.postgresql.org/wiki/Using_pg_upgrade_on_Ubuntu/Debian</a>
<a href="https://wiki.postgresql.org/wiki/Binary_Replication_Tutorial">https://wiki.postgresql.org/wiki/Binary_Replication_Tutorial</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load OSM Data to PostgreSQL]]></title>
    <link href="http://dbcaptain.com/blog/2015/10/29/Load%20OSM%20data%20to%20PostgreSQL/"/>
    <updated>2015-10-29T16:43:15+02:00</updated>
    <id>http://dbcaptain.com/blog/2015/10/29/Load OSM data to PostgreSQL</id>
    <content type="html"><![CDATA[<p>I&rsquo;m using a small DigitalOcean droplet to load fresh OSM data to PostgreSQL.
The 2G memory instance is prefereable, change it just for OSM load and you can change it back after.
I&rsquo;m going to use current stable versions:</p>

<ul>
<li>PostgreSQL 9.3</li>
<li>PostGIS 2.1</li>
<li>osm2pgsql 0.84</li>
<li>Ubuntu 12.04.4 LTS</li>
</ul>


<p>As reference using osm2pgsql article in OSM wiki.
Reference for Postgres/PostGIS installation using PostgreSQL installation guides wiki article and Official Ubuntu Community Wiki.
This one was good too.</p>

<pre><code class="sh">$ echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" &gt; /etc/apt/sources.list.d/postgresql.list
$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
$ sudo apt-get update
$ sudo apt-get upgrade
$ sudo apt-get install postgresql-9.3 postgresql-9.3-postgis-2.1 postgresql-contrib-9.3
</code></pre>

<p>Edit pg_hba.config for postgres to connect locally.</p>

<pre><code class="sh">$ sudo vi /etc/postgresql/9.3/main/pg_hba.conf
</code></pre>

<p>First not commented line will be like this (change peer to trust):
local all postgres trust</p>

<p>Restart postgresql service:
<code>sh
$ sudo service postgresql restart
</code>
Now check you are able to connect to postgres (default) database:</p>

<pre><code class="sh">$ psql -U postgres
psql (9.3.4)
Type "help" for help.

postgres=#
</code></pre>

<p>Create new database to store OSM data:</p>

<pre><code class="sh">postgres=# create database osm;
CREATE DATABASE
</code></pre>

<p>Connect to created database and add PostGIS and H-store extensions:
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>psql -U postgres -d osm
</span><span class='line'>psql <span class="o">(</span>9.3.4<span class="o">)</span>
</span><span class='line'>Type <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nb">help</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="k">for</span> help.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;osm<span class="o">=</span><span class="c"># create extension postgis;</span>
</span><span class='line'>CREATE EXTENSION
</span><span class='line'><span class="nv">osm</span><span class="o">=</span><span class="c"># create extension hstore;</span>
</span><span class='line'>CREATE EXTENSION
</span></code></pre></td></tr></table></div></figure>
Now we have the database we will use to load OSM data later.</p>

<p>Now let&rsquo;s compile osm2pgsql:</p>

<pre><code class="sh">$ sudo apt-get install build-essential libxml2-dev libgeos++-dev libpq-dev libbz2-dev proj libtool automake git lua5.2 liblua5.2-0 liblua5.2-dev liblua5.1-0 libprotobuf-c0-dev protobuf-c-compiler
$ wget https://github.com/openstreetmap/osm2pgsql/archive/0.84.0.zip
$ unzip 0.84.0.zip
$ rm 0.84.0.zip
$ cd osm2pgsql-0.84.0
$ ./autogen.sh &amp;&amp; ./configure &amp;&amp; make
$ sudo make install
</code></pre>

<p>Now let&rsquo;s download osm file we will use for import.
Here you can find different mirrors.</p>

<pre><code class="sh">wget http://download.geofabrik.de/north-america/us-northeast-latest.osm.bz2
</code></pre>

<p>And run osm2pgsql:</p>

<pre><code class="sh">bunzip2 -c us-northeast-latest.osm.bz2 | /usr/local/bin/osm2pgsql --slim -E 4326 -d osm -C 1500 -S /usr/share/osm2pgsql/default.style -U postgres --hstore /dev/stdin
</code></pre>

<p>And waiting &hellip;</p>
]]></content>
  </entry>
  
</feed>
